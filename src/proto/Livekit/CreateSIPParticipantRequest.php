<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_sip.proto

namespace Livekit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A SIP Participant is a singular SIP session connected to a LiveKit room via
 * a SIP Trunk into a SIP DispatchRule
 *
 * Generated from protobuf message <code>livekit.CreateSIPParticipantRequest</code>
 */
class CreateSIPParticipantRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * What SIP Trunk should be used to dial the user
     *
     * Generated from protobuf field <code>string sip_trunk_id = 1;</code>
     */
    protected $sip_trunk_id = '';
    /**
     * What number should be dialed via SIP
     *
     * Generated from protobuf field <code>string sip_call_to = 2;</code>
     */
    protected $sip_call_to = '';
    /**
     * What LiveKit room should this participant be connected too
     *
     * Generated from protobuf field <code>string room_name = 3;</code>
     */
    protected $room_name = '';
    /**
     * Optional identity of the participant in LiveKit room
     *
     * Generated from protobuf field <code>string participant_identity = 4;</code>
     */
    protected $participant_identity = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $sip_trunk_id
     *           What SIP Trunk should be used to dial the user
     *     @type string $sip_call_to
     *           What number should be dialed via SIP
     *     @type string $room_name
     *           What LiveKit room should this participant be connected too
     *     @type string $participant_identity
     *           Optional identity of the participant in LiveKit room
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LivekitSip::initOnce();
        parent::__construct($data);
    }

    /**
     * What SIP Trunk should be used to dial the user
     *
     * Generated from protobuf field <code>string sip_trunk_id = 1;</code>
     * @return string
     */
    public function getSipTrunkId()
    {
        return $this->sip_trunk_id;
    }

    /**
     * What SIP Trunk should be used to dial the user
     *
     * Generated from protobuf field <code>string sip_trunk_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSipTrunkId($var)
    {
        GPBUtil::checkString($var, True);
        $this->sip_trunk_id = $var;

        return $this;
    }

    /**
     * What number should be dialed via SIP
     *
     * Generated from protobuf field <code>string sip_call_to = 2;</code>
     * @return string
     */
    public function getSipCallTo()
    {
        return $this->sip_call_to;
    }

    /**
     * What number should be dialed via SIP
     *
     * Generated from protobuf field <code>string sip_call_to = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSipCallTo($var)
    {
        GPBUtil::checkString($var, True);
        $this->sip_call_to = $var;

        return $this;
    }

    /**
     * What LiveKit room should this participant be connected too
     *
     * Generated from protobuf field <code>string room_name = 3;</code>
     * @return string
     */
    public function getRoomName()
    {
        return $this->room_name;
    }

    /**
     * What LiveKit room should this participant be connected too
     *
     * Generated from protobuf field <code>string room_name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRoomName($var)
    {
        GPBUtil::checkString($var, True);
        $this->room_name = $var;

        return $this;
    }

    /**
     * Optional identity of the participant in LiveKit room
     *
     * Generated from protobuf field <code>string participant_identity = 4;</code>
     * @return string
     */
    public function getParticipantIdentity()
    {
        return $this->participant_identity;
    }

    /**
     * Optional identity of the participant in LiveKit room
     *
     * Generated from protobuf field <code>string participant_identity = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setParticipantIdentity($var)
    {
        GPBUtil::checkString($var, True);
        $this->participant_identity = $var;

        return $this;
    }

}

