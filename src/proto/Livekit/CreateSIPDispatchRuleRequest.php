<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: livekit_sip.proto

namespace Livekit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>livekit.CreateSIPDispatchRuleRequest</code>
 */
class CreateSIPDispatchRuleRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.livekit.SIPDispatchRule rule = 1;</code>
     */
    protected $rule = null;
    /**
     * What trunks are accepted for this dispatch rule
     * If empty all trunks will match this dispatch rule
     *
     * Generated from protobuf field <code>repeated string trunk_ids = 2;</code>
     */
    private $trunk_ids;
    /**
     * By default the From value (Phone number) is used as the participant identity
     * If true a random value will be used instead
     *
     * Generated from protobuf field <code>bool hide_phone_number = 3;</code>
     */
    protected $hide_phone_number = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Livekit\SIPDispatchRule $rule
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $trunk_ids
     *           What trunks are accepted for this dispatch rule
     *           If empty all trunks will match this dispatch rule
     *     @type bool $hide_phone_number
     *           By default the From value (Phone number) is used as the participant identity
     *           If true a random value will be used instead
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\LivekitSip::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.livekit.SIPDispatchRule rule = 1;</code>
     * @return \Livekit\SIPDispatchRule|null
     */
    public function getRule()
    {
        return $this->rule;
    }

    public function hasRule()
    {
        return isset($this->rule);
    }

    public function clearRule()
    {
        unset($this->rule);
    }

    /**
     * Generated from protobuf field <code>.livekit.SIPDispatchRule rule = 1;</code>
     * @param \Livekit\SIPDispatchRule $var
     * @return $this
     */
    public function setRule($var)
    {
        GPBUtil::checkMessage($var, \Livekit\SIPDispatchRule::class);
        $this->rule = $var;

        return $this;
    }

    /**
     * What trunks are accepted for this dispatch rule
     * If empty all trunks will match this dispatch rule
     *
     * Generated from protobuf field <code>repeated string trunk_ids = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTrunkIds()
    {
        return $this->trunk_ids;
    }

    /**
     * What trunks are accepted for this dispatch rule
     * If empty all trunks will match this dispatch rule
     *
     * Generated from protobuf field <code>repeated string trunk_ids = 2;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTrunkIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->trunk_ids = $arr;

        return $this;
    }

    /**
     * By default the From value (Phone number) is used as the participant identity
     * If true a random value will be used instead
     *
     * Generated from protobuf field <code>bool hide_phone_number = 3;</code>
     * @return bool
     */
    public function getHidePhoneNumber()
    {
        return $this->hide_phone_number;
    }

    /**
     * By default the From value (Phone number) is used as the participant identity
     * If true a random value will be used instead
     *
     * Generated from protobuf field <code>bool hide_phone_number = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setHidePhoneNumber($var)
    {
        GPBUtil::checkBool($var);
        $this->hide_phone_number = $var;

        return $this;
    }

}

